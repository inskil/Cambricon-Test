#include "mlu.h"

#define ONELINE 8192
#define N  8
__mlu_entry__ void ex2Kernel(half* input, half* output, int32_t len)
{

  __nram__ int32_t quotient = len / ONELINE;
  __nram__ int32_t rem = len % ONELINE;
  __nram__ half input_nram[ONELINE];
  __nram__ half temp3_nram[ONELINE];
  __nram__ half temp1_nram[ONELINE];
  __nram__ half temp2_nram[ONELINE];
  __nram__ half const_nram[ONELINE];

  __nramset_half(const_nram, ONELINE, 1);
  __nramset_half(temp2_nram, ONELINE, 0.0);
  if (rem != 0)
  {
    quotient +=1;
  } 

  for (int32_t i = 0; i < quotient; i++)
  {
    __memcpy(input_nram, input + i * ONELINE, ONELINE * sizeof(half), GDRAM2NRAM);
    __nramset_half(temp1_nram, ONELINE, 7.0);//t0=0
    for (int32_t j = 1; j <= N;j++)
    {
      __bang_mul_const(temp2_nram, temp1_nram, -1.0, ONELINE);
      __bang_active_exp(temp2_nram, temp2_nram, ONELINE);// exp(-tn)
      __bang_mul(temp2_nram, input_nram, temp2_nram, ONELINE);// x*exp(-tn)
      __bang_add(temp1_nram, temp1_nram, temp2_nram, ONELINE);// tn + x*exp(-tn)
      __bang_sub(temp1_nram, temp1_nram, const_nram, ONELINE);// tn + x*exp(-tn) -1
      
    }
    __bang_mul_const(input_nram, input_nram, -0.01, ONELINE);// -0.01x
    __bang_active_exp(input_nram, input_nram, ONELINE);//exp(-0.01x)
    __bang_add(input_nram, input_nram, const_nram, ONELINE);//1+exp(-0.01x)
    __bang_active_recip(input_nram, input_nram, ONELINE);// 1/exp(-0.01x)
    __bang_mul(temp1_nram, temp1_nram, input_nram, ONELINE);//ln(x)/exp(-0.01x)
    __memcpy(output +i * ONELINE, temp1_nram, ONELINE * sizeof(half), NRAM2GDRAM); 
  }
}
